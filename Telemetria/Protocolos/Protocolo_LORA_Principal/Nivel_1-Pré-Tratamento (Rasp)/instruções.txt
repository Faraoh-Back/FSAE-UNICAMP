========================================================================
             INSTRUÇÕES DE EXECUÇÃO - COLETOR CAN
========================================================================

Este arquivo pertence ao script 'coletor_can.py'.

------------------------------------------------------------------------
1. O QUE ESTE SCRIPT FAZ?
------------------------------------------------------------------------
Este script é o "coração" da coleta de dados do carro. Ele tem duas
funções principais:
  - LER: Conecta-se diretamente à rede CAN do veículo (via módulo
    MCP2515) e decodifica em tempo real os dados da ECU FuelTech.
  - SERVIR: Atua como um servidor de dados local. Ele disponibiliza
    as informações mais recentes dos sensores para que outros scripts,
    como o transmissor LoRa, possam consumi-las.

Ele deve ser o PRIMEIRO script a ser iniciado.

------------------------------------------------------------------------
2. PRÉ-REQUISITOS
------------------------------------------------------------------------
a) Hardware:
   - Raspberry Pi com o módulo MCP2515 devidamente conectado via SPI.

b) Bibliotecas Python:
   - Verifique se a biblioteca 'python-can' está instalada. Se não, instale com:
     pip install python-can

c) Configuração do Sistema (Raspberry Pi):
   - A interface SPI deve estar habilitada via 'sudo raspi-config'.
   - O arquivo '/boot/config.txt' deve conter o overlay para o mcp2515.
   - A interface de rede 'can0' deve ser ativada antes de rodar o script.

------------------------------------------------------------------------
3. COMO EXECUTAR
------------------------------------------------------------------------
1. Abra um terminal na sua Raspberry Pi.

2. Navegue até a pasta principal do seu projeto de telemetria. Exemplo:
   cd /home/dev/GitPessoal/FSAE-UNICAMP/Telemetria/Protocolo_LORA(Principal)

3. Ative a interface de rede CAN com a velocidade correta (1 Mbps para FuelTech):
   sudo ip link set can0 up type can bitrate 1000000

4. Execute o script do coletor:
   python3 Nivel_1_Coleta/coletor_can.py

------------------------------------------------------------------------
4. O QUE ESPERAR
------------------------------------------------------------------------
Após a execução, o script imprimirá mensagens de inicialização e, em
seguida, a mensagem:
  "[Servidor de Dados] Aguardando conexão do cliente (Transmissor LoRa)..."

O script ficará "parado" nesta etapa, o que é o comportamento
correto. Ele está agora pronto e esperando o script do transmissor LoRa
se conectar para começar a fornecer os dados.